{"version":3,"sources":["images/logo.png","components/Header.js","services/data.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetail.js","components/Search.js","components/App.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","ENDPOINT","formatAllChars","charItem","name","id","image","species","CharacterCard","props","character","CharacterList","characters","filter","searchText","toLowerCase","includes","map","key","to","CharacterDetail","status","origin","episodes","Search","onSubmit","event","preventDefault","htmlFor","type","ref","onChange","handleSearchText","target","value","App","state","searching","charSelected","React","createRef","bind","focusSearchText","renderCharacterDetail","this","current","focus","setState","fetch","then","response","json","data","results","getSelCharFromApi","episode","length","Number","match","params","path","exact","render","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.84216f56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","import React from 'react';\nimport logo from '../images/logo.png';\n\n\nconst Header = () => {\n    return (\n        <header className=\"App-header\">\n            <img src={logo} alt=\"Rick and Morty logo\" className=\"App-header__logo\" />\n        </header>\n    );\n};\n\nexport default Header;","const ENDPOINT = 'https://rickandmortyapi.com/api/character/'\n\nconst formatAllChars = charItem => {\n    return {\n        name: charItem.name,\n        id: charItem.id,\n        image: charItem.image,\n        species: charItem.species\n    };\n};\n\nconst getAllCharsFromApi = () => {\n    return fetch(ENDPOINT)\n        .then(response => response.json())\n        .then(data => data.results.map(formatAllChars));\n};\n\nconst getSelCharFromApi = (id) => {\n    return fetch(ENDPOINT + id)\n        .then(response => response.json())\n};\n\nexport { getAllCharsFromApi, getSelCharFromApi };","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = props => {\n    const { name, species, image } = props.character;\n\n    return (\n        <div className=\"card\">\n            <img className=\"card__image\" src={image} alt={`${name} avatar`}\n            />\n            <div className=\"card__text\">\n                <p className=\"card__text--name\">{name}</p>\n                <p className=\"card__text--species\">{species}</p>\n            </div>\n        </div >\n    );\n};\n\nCharacterCard.propTypes = {\n    name: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    image: PropTypes.string\n};\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport { Link } from 'react-router-dom';\n\nconst CharacterList = props => {\n    return (\n        <ul className=\"char-list__wrapper\">\n            {props.characters\n                .filter(character =>\n                    props.searchText === ''\n                    || character.name.toLowerCase().includes(props.searchText.toLowerCase()))\n                .map(character => {\n                    return (\n                        <li key={character.id} className=\"char-list__item\">\n                            <Link\n                                to={`/character/${character.id}`}\n                                className=\"\">\n                                <CharacterCard character={character} />\n                            </Link>\n                        </li>\n                    );\n                })}\n        </ul>\n    );\n};\n\nexport default CharacterList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst CharacterDetail = props => {\n    const { image, name, status, species, origin, episodes } = props.character;\n\n    return (\n        <div className=\"char-detail__wrapper\">\n            <Link className=\"char-detail__back-link\" to=\"/\">\n                <div className=\"char-detail__back-link--btn\">Volver</div>\n            </Link>\n            <div className=\"char-detail__card\">\n                <img className=\"char-detail__card--image\" src={image} alt={`${name} avatar`} />\n                <div className=\"char-detail__card--text\">\n                    <h2 className=\"char-detail__card--name\">{name}</h2>\n                    <p><span className=\"typo-bold\">Status: </span>{status}</p>\n                    <p><span className=\"typo-bold\">Species: </span>{species}</p>\n                    <p><span className=\"typo-bold\">Origin: </span>{origin}</p>\n                    <p><span className=\"typo-bold\">Episodes: </span>{episodes}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nCharacterDetail.propTypes = {\n    name: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    image: PropTypes.string,\n    status: PropTypes.string.isRequired,\n    origin: PropTypes.string.isRequired,\n    species: PropTypes.string.isRequired,\n    episodes: PropTypes.number.isRequired,\n};\n\nexport default CharacterDetail;\n\n","import React from 'react';\n\nconst Search = props => {\n    const handleSearchSubmit = (event) => {\n        event.preventDefault();\n    }\n    const handleSearchText = event => {\n        props.handleSearchText(event.target.value);\n    }\n    return <form onSubmit={handleSearchSubmit} className=\"search__form\">\n        <label htmlFor=\"search\" />\n        <input\n            type=\"text\"\n            id=\"search\"\n            name=\"search\"\n            className=\"search__input-text\"\n            ref={props.searchText}\n            onChange={handleSearchText} />\n    </form>\n}\n\nexport default Search;","import React from 'react';\nimport '../styles/App.scss';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport { getAllCharsFromApi, getSelCharFromApi } from '../services/data';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport Search from './Search';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searching: false,\n      searchText: '',\n      characters: [],\n      charSelected: {}\n    }\n    this.searchText = React.createRef();\n    this.handleSearchText = this.handleSearchText.bind(this);\n    this.focusSearchText = this.focusSearchText.bind(this);\n    this.renderCharacterDetail = this.renderCharacterDetail.bind(this);\n  }\n\n  // event methods\n\n  focusSearchText() {\n    this.searchText.current.focus();\n  }\n\n  handleSearchText(value) {\n    this.setState({ searchText: value });\n  }\n\n  componentDidMount() {\n    getAllCharsFromApi()\n      .then(characters => {\n        this.setState({ characters: characters });\n      });\n  }\n\n  getSelCharFromApi(id) {\n    if (id !== this.state.charSelected.id) {\n      getSelCharFromApi(id)\n        .then(data => {\n          let character = {\n            name: data.name,\n            id: data.id,\n            image: data.image,\n            species: data.species,\n            origin: data.origin.name,\n            status: data.status,\n            episodes: data.episode.length\n          };\n\n          this.setState({ charSelected: character })\n        })\n    }\n  }\n\n  renderCharacterDetail(props) {\n    const id = Number(props.match.params.id);\n    this.getSelCharFromApi(id);\n    return <CharacterDetail character={this.state.charSelected} />\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <main className=\"App-main\">\n          <Switch>\n            <Route path=\"/\" exact>\n              <Search\n                searchText={this.searchText}\n                handleSearchText={this.handleSearchText}\n              />\n              <CharacterList\n                characters={this.state.characters}\n                searchText={this.state.searchText}\n              />\n            </Route>\n            <Route\n              path=\"/character/:id\"\n              render={this.renderCharacterDetail}\n            />\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById('root'))\n    ;\n\n\n\n"],"sourceRoot":""}